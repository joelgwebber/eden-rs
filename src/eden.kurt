-[
    TODO:
    - ? builtin
    - for-each
    - push/pop
]-

(do
    (def :World {
        :ents {}
        :index {}

        :init (| do
            (add (Player.new))
            (add (Enemy.new))
            (tick)
        )

        :tick (| do
            (@.index.located.for-each (_ id | ((@.ents id).update)))
            (@.index.rendered.for-each (_ id | ((@.ents id).render)))
        )

        :add (ent | do
            (@:ents.set ent.id ent)
            (ent.for-each (key comp |
                (if (World.? :index) (World.set :index []))
                ((World.index key).push ent.id)
            ))
        )
    })

    (def :Entity {
        :next-id 1

        :new (comps | do
            (def :@ { :id Entity.next-id })
            (Entity.set :next-id (+ Entity.next-id 1))
            (@.set comps)
            @
        )
    })

    (def :Located {
        :id :located
        :new (x y z | {
            :^ -impl
            :x  x :y  y :z  z
            :dx 0 :dy 0 :dz 0
        })

        :-impl {
            :move (dx dy dz |
                @:set { :dx dx :dy dy :dz dz }
            )

            :update (|
                (@:set {
                    :x [+ @:x @:dx]
                    :y [+ @:y @:dx]
                    :z [+ @:z @:dx]
                    :dx 0 :dy 0 :dz 0
                })
            )
        }
    })

    (def :Rendered {
        :id :rendered
        :new (img | {
            :^ -impl
            :img img
        })

        :-impl {
            :draw (x y z |
                (log ["drawing" x y z])
            )
        }
    })

    (def :Enemy {
        :new (| (Entity:new {
            Located.id (Located.new 10 10 0)
            Rendered.id (Rendered.new "enemy.png")
            :enemy {
                :^ impl
                :name "enemy"
                :health 100
            }
        }))

        :-impl {
            -- ...
        }
    })

    (def :Player {
        :new (| (Entity:new {
            Located.id (Located.new 0 0 0)
            Rendered.id (Rendered.new "player.png")
            :player {
                :^ -impl
                :name "player"
                :helth 100
            }
        }))

        :-impl {
            -- ...
        }
    })
)
